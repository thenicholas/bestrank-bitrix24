{"version":3,"file":"grid-custom.bundle.js","sources":["../src/grid-custom.js","../src/index.js"],"sourcesContent":["export class GridCustom {\n    static #instance = null;\n\n    constructor() {\n        if (GridCustom.#instance) {\n            return GridCustom.#instance;\n        }\n\n        this.customGridData = {\n            coloringCells: {\n                columnName: 'PROPERTY_97',\n                greenValue: 5,\n                redValue: 2,\n                greenColor: '#d9ffd9',\n                redColor: '#ffbbbb'\n            }\n        };\n\n        GridCustom.#instance = this;\n    }\n\n    gridUpdateHandler(gridInstance) {\n        const gridRows = gridInstance.getRows();\n        const bodyRows = gridRows.getBodyChild();\n\n        this.coloringCells(gridRows, bodyRows);\n    }\n\n    coloringCells(gridRows, bodyRows) {\n        const headerCells = gridRows?.getHeadFirstChild()?.getCells();\n\n        if (!headerCells) {\n            return;\n        }\n\n        let nameCellIndex = false;\n        for (let key in headerCells) {\n            if (headerCells[key]?.dataset?.name === this.customGridData.coloringCells.columnName) {\n                nameCellIndex = key;\n                break;\n            }\n        }\n\n        if (nameCellIndex === false) {\n            return;\n        }\n\n        for (let rowKey in bodyRows) {\n            const bodyRow = bodyRows[rowKey];\n            const bodyRowCells = bodyRow.getCells();\n\n            let cellValue = parseFloat(bodyRowCells[nameCellIndex]\n                ?.querySelector('.main-grid-cell-content')?.innerText?.replace(/[^\\d]/g, ''));\n\n            if (isNaN(cellValue)) {\n                continue;\n            }\n\n            if (cellValue === this.customGridData.coloringCells.greenValue) {\n                bodyRowCells[nameCellIndex].style.backgroundColor = this.customGridData.coloringCells.greenColor;\n            } else if (cellValue <= this.customGridData.coloringCells.redValue) {\n                bodyRowCells[nameCellIndex].style.backgroundColor = this.customGridData.coloringCells.redColor;\n            }\n        }\n    }\n}\n","import {GridCustom} from './grid-custom';\nimport {EventEmitter} from 'main.core.events';\n\nconst gridCustom = new GridCustom();\n\nBX.ready(function() {\n    EventEmitter.subscribe('grid::ready', function(event) {\n        const grid = event.getData()[0];\n        if (grid instanceof BX.Main.grid) {\n            gridCustom.gridUpdateHandler(grid);\n        }\n    });\n\n    EventEmitter.subscribe('grid::updated', function(event) {\n        const grid = event.getData()[0];\n        if (grid instanceof BX.Main.grid) {\n            gridCustom.gridUpdateHandler(grid);\n        }\n    });\n});\n"],"names":["GridCustom","customGridData","coloringCells","columnName","greenValue","redValue","greenColor","redColor","gridInstance","gridRows","getRows","bodyRows","getBodyChild","headerCells","getHeadFirstChild","getCells","nameCellIndex","key","dataset","name","rowKey","bodyRow","bodyRowCells","cellValue","parseFloat","querySelector","innerText","replace","isNaN","style","backgroundColor","gridCustom","BX","ready","EventEmitter","subscribe","event","grid","getData","Main","gridUpdateHandler"],"mappings":"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"}